// Copyright (c) 2024 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./index.d.ts" />
import s from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-ndarray-like@v0.2.0-esm/index.mjs";import t from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-multi-slice@v0.2.0-esm/index.mjs";import r from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-array-like-object@v0.2.0-esm/index.mjs";import e from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-plain-object@v0.2.0-esm/index.mjs";import{isPrimitive as i}from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-boolean@v0.2.0-esm/index.mjs";import n from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-assert-is-read-only@v0.2.0-esm/index.mjs";import o from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-has-own-property@v0.2.0-esm/index.mjs";import a from"https://cdn.jsdelivr.net/gh/stdlib-js/slice-multi@v0.2.0-esm/index.mjs";import m from"https://cdn.jsdelivr.net/gh/stdlib-js/slice-base-args2multislice@v0.2.0-esm/index.mjs";import d from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-base-slice-assign@v0.1.0-esm/index.mjs";import l from"https://cdn.jsdelivr.net/gh/stdlib-js/ndarray-shape@v0.2.0-esm/index.mjs";import h from"https://cdn.jsdelivr.net/gh/stdlib-js/string-format@v0.1.1-esm/index.mjs";function c(c,j,p){var v,f,g,u,b,y,w;if(g={strict:!0},f=arguments.length,!s(c))throw new TypeError(h("invalid argument. First argument must be an ndarray. Value: `%s`.",c));if(!s(j))throw new TypeError(h("invalid argument. Second argument must be an ndarray. Value: `%s`.",j));if(n(j))throw new Error("invalid argument. Cannot write to a read-only array.");if(e(arguments[f-1])){if(o(v=arguments[f-=1],"strict")){if(!i(v.strict))throw new TypeError(h("invalid option. `%s` option must be a boolean. Option: `%s`.","strict",v.strict));g.strict=v.strict}if(b=l(j),2===f&&b.length>0)throw new RangeError(h("invalid argument. Number of slice dimensions does not match the number of array dimensions. Array shape: (%s). Slice dimensions: %u.",b.join(","),0))}if(t(p)){if(y=p,f>3)throw new Error("invalid invocation. Too many arguments.")}else{if(r(p)){if(u=p,f>3)throw new Error("invalid invocation. Too many arguments.")}else for(u=[],w=2;w<f;w++)u.push(arguments[w]);try{y=m(u)}catch(s){for(w=0;w<u.length;w++)try{new a(u[w])}catch(s){throw new TypeError(h("invalid argument. Slice arguments must be either a Slice, integer, null, or undefined. Value: `%s`.",String(u[w])))}}}return d(c,j,y,g.strict)}export{c as default};
//# sourceMappingURL=index.mjs.map
